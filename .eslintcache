[{"F:\\REACT\\login\\src\\index.js":"1","F:\\REACT\\login\\src\\reportWebVitals.js":"2","F:\\REACT\\login\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":1522,"mtime":1610462422162,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1mhsdhe",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"F:\\REACT\\login\\src\\index.js",[],["16","17"],"F:\\REACT\\login\\src\\reportWebVitals.js",[],"F:\\REACT\\login\\src\\App.js",["18"],"import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: null,\n      password: null,\n      formErrors: {\n        username: \"\",\n        password: \"\"\n      }\n    };\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"form-wrapper\">\n        <div className=\"pic\">\n        <h1><b>SIGN IN</b></h1>\n      </div>\n          \n          <form onSubmit={this.handleSubmit} noValidate>\n            <div className=\"username\">\n              <label htmlFor=\"username\">UserName</label>\n              <input\n                placeholder=\"Enter Username\"\n                type=\"text\"\n                name=\"username\"  \n              /> \n            </div> \n            <div className=\"password\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                placeholder=\"Enter Password\"\n                type=\"password\"\n                name=\"password\"\n                noValidate \n              />\n              \n            </div>\n            <div className=\"remember\">\n            \n            <input type=\"checkbox\" name=\"rem\"/>\n            <label htmlFor=\"remember\">Remember Me</label>\n            <a href=\"#\">Forgot Password?</a>\n            </div>\n            <div className=\"login\">\n            \n              <button type=\"submit\">Login</button>\n              \n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":48,"column":13,"nodeType":"25","endLine":48,"endColumn":25},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]